// Some of the macro stuff might not be done the correct way, I'm not very experienced with them

// https://stackoverflow.com/a/17624752
/*#define PP_CAT(a, b) PP_CAT_I(a, b)
#define PP_CAT_I(a, b) PP_CAT_II(~, a ## b)
#define PP_CAT_II(p, res) res

#define UNIQUE_NAME(base) PP_CAT(base, __COUNTER__)

#define ACTUAL

// https://stackoverflow.com/a/6671729
#define Q(x) #x
#define QUOTE(x) Q(x)

/*
 * Concatenate preprocessor tokens A and B without expanding macro definitions
 * (however, if invoked from a macro, macro arguments are expanded).
 */
/*#define PPCAT_NX(A, B) A ## B

/*
 * Concatenate preprocessor tokens A and B after macro-expanding them.
 */
/*#define PPCAT(A, B) PPCAT_NX(A, B)

// Combo with unique name
#define COMB_U(key, ...) COMB(UNIQUE_NAME(comb_r_), key, __VA_ARGS__)*/
//#define COMB_U(key, ...) COMB(__COUNTER__, key, __VA_ARGS__)

//// BAT layout combos

// Letters
COMB_U(KB_2, KB_3, KB_4, KB_BLACK, KC_A)
COMB_U(KB_1, KB_4, KC_B)
COMB_U(KB_3, KB_BLACK, KC_C)
COMB_U(KB_3, KB_4, KC_D)
COMB_U(KB_2, KB_3, KB_4, KC_E)
COMB_U(KB_1, KB_BLACK, KC_F)
COMB_U(KB_2, KB_BLACK, KC_G)
COMB_U(KB_2, KB_3, KC_H)
// I is KB_4
COMB_U(KB_2, KB_4, KB_BLACK, KC_J)
COMB_U(KB_2, KB_4, KC_K)
COMB_U(KB_4, KB_BLACK, KC_L)
COMB_U(KB_3, KB_4, KB_BLACK, KC_M)
COMB_U(KB_1, KB_2, KB_3, KB_BLACK, KC_N)
COMB_U(KB_1, KB_2, KB_3, KB_4, KB_BLACK, KC_O)
COMB_U(KB_2, KB_3, KB_BLACK, KC_P)
COMB_U(KB_1, KB_2, KB_4, KB_BLACK, KC_Q)
// R is KB_3
COMB_U(KB_1, KB_2, KB_3, KC_S)
COMB_U(KB_1, KB_2, KB_3, KB_4, KC_T)
COMB_U(KB_1, KB_2, KC_U)
COMB_U(KB_1, KB_2, KB_BLACK, KC_V)
// W is KB_1
COMB_U(KB_1, KB_4, KB_BLACK, KC_X)
// Y is KB_2
COMB_U(KB_1, KB_2, KB_4, KC_Z)

// Special keys
COMB_U(KB_1, KB_BLUE, KC_ENT)
COMB_U(KB_3, KB_BLUE, KC_BSPC)
COMB_U(KB_2, KB_3, KB_BLUE, KC_DEL)
COMB_U(KB_2, KB_4, KB_BLUE, KC_TAB)
COMB_U(KB_1, KB_2, KB_3, KB_4, KB_BLUE, KC_CAPS)
COMB_U(KB_1, KB_3, KB_BLUE, KC_PSCN)
COMB_U(KB_1, KB_3, KB_4, KB_BLUE, KC_SCLK)
COMB_U(KB_1, KB_2, KB_3, KB_RED, CALT)
COMB_U(KB_1, KB_2, KB_4, KB_RED, CCTRL)
COMB_U(KB_2, KB_RED, KC_ESC)
COMB_U(KB_1, KB_4, KB_RED, KC_INS)
COMB_U(KB_4, KB_RED, CGUI)
COMB_U(KB_1, KB_3, KB_RED, KC_BRK)
COMB_U(KB_3, KB_RED, KC_COMM)
COMB_U(KB_2, KB_3, KB_RED, KC_DOT)
COMB_U(KB_2, KB_3, KB_4, KB_RED, KC_QUOT)
COMB_U(KB_1, KB_2, KB_RED, KC_SCLN)

// Mode
COMB_U(KB_1, KB_2, KB_3, KB_4, KB_RED, TG(_NUMBERS))
COMB_U(KB_F_1, KB_F_2, KB_F_3, KB_F_4, KB_F_RED, TG(_NUMBERS))
COMB_U(KB_1, KB_RED, OSL(_FUNCTION))
COMB_U(KB_3, KB_4, KB_RED, LATCH)
COMB_U(KB_1, KB_3, KB_4, KB_RED, RIGHT)

// Cursor movement
COMB_U(KB_1, KB_2, KB_4, KB_BLUE, KC_HOME)
COMB_U(KB_1, KB_4, KB_BLUE, KC_END)
COMB_U(KB_2, KB_3, KB_4, KB_BLUE, KC_PGUP)
COMB_U(KB_1, KB_2, KB_3, KB_BLUE, KC_PGDN)
COMB_U(KB_4, KB_BLUE, KC_LEFT)
COMB_U(KB_2, KB_BLUE, KC_RIGHT)
COMB_U(KB_3, KB_4, KB_BLUE, KC_UP)
COMB_U(KB_1, KB_2, KB_BLUE, KB_DOWN)

// Function keys
COMB_U(KB_F_4, KB_F_BLACK, KC_F6)
COMB_U(KB_F_3, KB_F_BLACK, KC_F7)
COMB_U(KB_F_2, KB_F_BLACK, KC_F8)
COMB_U(KB_F_1, KB_F_BLACK, KC_F9)
COMB_U(KB_F_3, KB_F_4, KB_F_BLACK, KC_F10)
COMB_U(KB_F_2, KB_F_3, KB_F_BLACK, KC_F11)
COMB_U(KB_F_1, KB_F_2, KB_F_BLACK, KC_F12)

// Reset
COMB_U(KB_RED, KB_BLACK, KB_BLUE, RESET)

// Numbers and symbols
COMB_U(KB_N_4, KB_N_BLACK, KC_6)
COMB_U(KB_N_3, KB_N_BLACK, KC_7)
COMB_U(KB_N_2, KB_N_BLACK, KC_8)
COMB_U(KB_N_1, KB_N_BLACK, KC_9)
COMB_U(KB_N_1, KB_N_2, KB_N_3, KB_N_4, KB_N_BLACK, KC_0)
COMB_U(KB_N_1, KB_N_4, KC_BSLS)
COMB_U(KB_N_1, KB_N_2, KB_N_4, KC_GRV)
COMB_U(KB_N_1, KB_N_2, KB_N_3, KC_N_BLACK, KC_LBRC)
COMB_U(KB_N_1, KB_N_2, KB_N_BLACK, KC_RBRC)
COMB_U(KB_N_1, KB_N_2, KB_N_3, KC_MINS)
COMB_U(KB_N_3, KB_N_4, KC_SLSH)
COMB_U(KB_N_2, KB_N_3, KB_N_4, KC_EQU)
COMB_U(KB_N_1, KB_N_2, KC_QUOT)
COMB_U(KB_N_2, KB_N_4, KB_N_BLACK, PAREN_SHIFT)
COMB_U(KB_N_2, KB_N_3, KC_00)
COMB_U(KB_N_1, KB_N_2, KB_N_3, KB_N_4, KC_000)
COMB_U(KB_N_1, KB_N_2, KB_N_4, KB_N_BLACK, KC_DLR)
COMB_U(KB_N_2, KB_N_4, KC_QUES)

//#define UNIQUE_NAME comb_r_ QUOTE(__COUNTER__)

//#define UNIQUE_NAME PPCAT(comb_r_, __COUNTER__)

//COMB(UNIQUE_NAME, KB_1, KB_2, KC_Y)
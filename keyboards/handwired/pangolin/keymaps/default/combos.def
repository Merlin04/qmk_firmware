// This file is automatically generated by generate_combos.py.
// Do not modify it; instead, modify combos_source.def and run generate_combos.py to generate combos.def.
//// BAT layout combos

// Letters
COMB(combo5, KB_2, KB_3, KB_4, KB_BLACK, KC_A)
COMB(combo6, KB_1, KB_4, KC_B)
COMB(combo7, KB_3, KB_BLACK, KC_C)
COMB(combo8, KB_3, KB_4, KC_D)
COMB(combo9, KB_2, KB_3, KB_4, KC_E)
COMB(combo10, KB_1, KB_BLACK, KC_F)
COMB(combo11, KB_2, KB_BLACK, KC_G)
COMB(combo12, KB_2, KB_3, KC_H)
// I is KB_4
COMB(combo14, KB_2, KB_4, KB_BLACK, KC_J)
COMB(combo15, KB_2, KB_4, KC_K)
COMB(combo16, KB_4, KB_BLACK, KC_L)
COMB(combo17, KB_3, KB_4, KB_BLACK, KC_M)
COMB(combo18, KB_1, KB_2, KB_3, KB_BLACK, KC_N)
COMB(combo19, KB_1, KB_2, KB_3, KB_4, KB_BLACK, KC_O)
COMB(combo20, KB_2, KB_3, KB_BLACK, KC_P)
COMB(combo21, KB_1, KB_2, KB_4, KB_BLACK, KC_Q)
// R is KB_3
COMB(combo23, KB_1, KB_2, KB_3, KC_S)
COMB(combo24, KB_1, KB_2, KB_3, KB_4, KC_T)
COMB(combo25, KB_1, KB_2, KC_U)
COMB(combo26, KB_1, KB_2, KB_BLACK, KC_V)
// W is KB_1
COMB(combo28, KB_1, KB_4, KB_BLACK, KC_X)
// Y is KB_2
COMB(combo30, KB_1, KB_2, KB_4, KC_Z)

// Special keys
COMB(combo33, KB_1, KB_BLUE, KC_ENT)
COMB(combo34, KB_3, KB_BLUE, KC_BSPC)
COMB(combo35, KB_2, KB_3, KB_BLUE, KC_DEL)
COMB(combo36, KB_2, KB_4, KB_BLUE, KC_TAB)
COMB(combo37, KB_1, KB_2, KB_3, KB_4, KB_BLUE, KC_CAPS)
COMB(combo38, KB_1, KB_3, KB_BLUE, KC_PSCR)
COMB(combo39, KB_1, KB_3, KB_4, KB_BLUE, KC_SLCK)
//COMB(combo40, KB_1, KB_2, KB_3, KB_RED, CALT)
//COMB(combo41, KB_1, KB_2, KB_4, KB_RED, CCTRL)
COMB(combo42, KB_2, KB_RED, KC_ESC)
COMB(combo43, KB_1, KB_4, KB_RED, KC_INS)
//COMB(combo44, KB_4, KB_RED, CGUI)
COMB(combo45, KB_1, KB_3, KB_RED, KC_BRK)
COMB(combo46, KB_3, KB_RED, KC_COMM)
COMB(combo47, KB_2, KB_3, KB_RED, KC_DOT)
COMB(combo48, KB_2, KB_3, KB_4, KB_RED, KC_QUOT)
COMB(combo49, KB_1, KB_2, KB_RED, KC_SCLN)

// Mode
COMB(combo52, KB_1, KB_2, KB_3, KB_4, KB_RED, TG(_NUMBERS))
COMB(combo53, KB_F_1, KB_F_2, KB_F_3, KB_F_4, KB_F_RED, TG(_NUMBERS))
COMB(combo54, KB_1, KB_RED, OSL(_FUNCTION))
//COMB(combo55, KB_3, KB_4, KB_RED, LATCH)
//COMB(combo56, KB_1, KB_3, KB_4, KB_RED, RIGHT)

// Cursor movement
COMB(combo59, KB_1, KB_2, KB_4, KB_BLUE, KC_HOME)
COMB(combo60, KB_1, KB_4, KB_BLUE, KC_END)
COMB(combo61, KB_2, KB_3, KB_4, KB_BLUE, KC_PGUP)
COMB(combo62, KB_1, KB_2, KB_3, KB_BLUE, KC_PGDN)
COMB(combo63, KB_4, KB_BLUE, KC_LEFT)
COMB(combo64, KB_2, KB_BLUE, KC_RIGHT)
COMB(combo65, KB_3, KB_4, KB_BLUE, KC_UP)
COMB(combo66, KB_1, KB_2, KB_BLUE, KC_DOWN)

// Function keys
COMB(combo69, KB_F_4, KB_F_BLACK, KC_F6)
COMB(combo70, KB_F_3, KB_F_BLACK, KC_F7)
COMB(combo71, KB_F_2, KB_F_BLACK, KC_F8)
COMB(combo72, KB_F_1, KB_F_BLACK, KC_F9)
COMB(combo73, KB_F_3, KB_F_4, KB_F_BLACK, KC_F10)
COMB(combo74, KB_F_2, KB_F_3, KB_F_BLACK, KC_F11)
COMB(combo75, KB_F_1, KB_F_2, KB_F_BLACK, KC_F12)

// Reset
COMB(combo78, KB_RED, KB_BLACK, KB_BLUE, RESET)

// Numbers and symbols
COMB(combo81, KB_N_4, KB_N_BLACK, KC_6)
COMB(combo82, KB_N_3, KB_N_BLACK, KC_7)
COMB(combo83, KB_N_2, KB_N_BLACK, KC_8)
COMB(combo84, KB_N_1, KB_N_BLACK, KC_9)
COMB(combo85, KB_N_1, KB_N_2, KB_N_3, KB_N_4, KB_N_BLACK, KC_0)
COMB(combo86, KB_N_1, KB_N_4, KC_BSLS)
COMB(combo87, KB_N_1, KB_N_2, KB_N_4, KC_GRV)
COMB(combo88, KB_N_1, KB_N_2, KB_N_3, KB_N_BLACK, KC_LBRC)
COMB(combo89, KB_N_1, KB_N_2, KB_N_BLACK, KC_RBRC)
COMB(combo90, KB_N_1, KB_N_2, KB_N_3, KC_MINS)
COMB(combo91, KB_N_3, KB_N_4, KC_SLSH)
COMB(combo92, KB_N_2, KB_N_3, KB_N_4, KC_EQL)
COMB(combo93, KB_N_1, KB_N_2, KC_QUOT)
//COMB(combo94, KB_N_2, KB_N_4, KB_N_BLACK, PAREN_SHIFT)
//COMB(combo95, KB_N_2, KB_N_3, KC_00)
//COMB(combo96, KB_N_1, KB_N_2, KB_N_3, KB_N_4, KC_000)
COMB(combo97, KB_N_1, KB_N_2, KB_N_4, KB_N_BLACK, KC_DLR)
COMB(combo98, KB_N_2, KB_N_4, KC_QUES)
